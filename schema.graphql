enum TransactionType {
  Invalid
  VaultDeposit
  VaultWithdraw
  VaultTokenTransfer
}

enum StrategyType {
  Invalid
  CeresLeveragedStrategy
}

enum SnapshotType {
  Hourly
  Daily
  Weekly
}

type Vault @entity(immutable: false) {
  " Vault address "
  id: Bytes!

  " Protocol stats - used to link the vault to the protocol entity "
  protocolStats: ProtocolStats!

  " Vault name "
  name: String!

  " Vault symbol  "
  symbol: String!

  " Vault decimals "
  decimals: Int!

  " Underlying asset address "
  asset: Bytes!

  totalAssets: BigInt!

  totalSupply: BigInt!

  " Price per share of the vault's ERC4626 token "
  pricePerShare: BigInt!

  " Price per share in the underlying asset "
  pricePerShareUnderlying: BigInt!

  " Total profits in the underlying asset "
  totalPnlUnderlying: BigInt!

  depositLimit: BigInt!

  " Total amount of assets deposited to the vault over time"
  totalAssetsDeposited: BigInt!

  " Total amount of assets withdrawn from the vault over time"
  totalAssetsWithdrawn: BigInt!

  " Total profits of the vault during reports "
  totalGain: BigInt!

  " Total losses of the vault during reports "
  totalLoss: BigInt!

  " Current debt of the vault to all strategies "
  currentDebt: BigInt!

  " Total protocol fees charged "
  totalProtocolFees: BigInt!

  " Total fees charged "
  totalFees: BigInt!

  " Total refunds from strategies "
  totalRefunds: BigInt!

  " Timestamp of the last update to the subgraph vault data "
  lastUpdatedTimestamp: BigInt!

  strategies: [Strategy!]! @derivedFrom(field: "vault")

  isShutdown: Boolean!

  lastHourlySnapshot: BigInt!

  lastDailySnapshot: BigInt!

  lastWeeklySnapshot: BigInt!
}

"""
 This strategy entity should only have the fields of the Yearn ERC4626 strategy contract "
" Any custom strategy specific fields should go in a separate entity with the same address based on the strategyType "
"""
type Strategy @entity(immutable: false) {
  " Strategy address"
  id: Bytes!

  " Protocol stats - used to link the strategy to the protocol entity "
  protocolStats: ProtocolStats!

  " Strategy name"
  name: String!

  " Strategy symbol "
  symbol: String!

  " Strategy decimals "
  decimals: Int!

  " Strategy type "
  strategyType: StrategyType!

  " Vault the strategy is linked to "
  vault: Vault!

  totalAssets: BigInt!

  totalSupply: BigInt!

  " Price per share of the strategy's ERC4626 token "
  pricePerShare: BigInt!

  " Total collateral in strategy collateral assets e.g PT-smsUsd "
  totalCollateral: BigInt!

  " Total debt of the strategy in borrow tokens e.g USDC "
  totalDebt: BigInt!

  performanceFeeBps: Int!

  protocolFeeBps: Int!

  isActive: Boolean!

  lastReportTimestamp: BigInt!

  totalProfit: BigInt!

  totalLoss: BigInt!

  totalProtocolFees: BigInt!

  " Total performance fees charged "
  totalPerformanceFees: BigInt!

  lastSnapshotTimestamp: BigInt!
}

type TransactionHistory @entity(immutable: true) {
  id: Bytes!
  vaultAddress: Bytes! # address
  transactionType: TransactionType!
  sender: Bytes! # address
  owner: Bytes! # address
  receiver: Bytes! # address
  assets: BigInt! # uint256
  shares: BigInt! # uint256
  txHash: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
}

type UserVaultStats @entity(immutable: false) {
  " User address + Vault address "
  id: ID!
  userAddress: Bytes!
  vaultAddress: Bytes!
  totalAssetsDeposited: BigInt!
  totalDepositsUnderlying: BigInt!
  totalAssetsWithdrawn: BigInt!
  totalWithdrawalsUnderlying: BigInt!
  realizedPnlAssets: BigInt!
  realizedPnlUnderlying: BigDecimal!
  currentShares: BigInt!
  avgPricePerShare: BigInt!
  avgPricePerShareUnderlying: BigInt!
  lastUpdatedTimestamp: BigInt!
}

type NewVault @entity(immutable: true) {
  id: Bytes!
  vault_address: Bytes! # address
  asset: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NewStrategy @entity(immutable: true) {
  id: Bytes!
  strategy: Bytes! # address
  asset: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProtocolStats @entity(immutable: false) {
  id: ID!
  vaults: [Bytes!]!
  strategies: [Bytes!]!
}

type VaultSnapshot @entity(immutable: true) {
  " Vault address + timestamp + logIndex"
  id: ID!
  vault: Vault!
  snapshotType: SnapshotType!
  timestamp: BigInt!
  blockNumber: BigInt!
  pricePerShare: BigInt!
  pricePerShareUnderlying: BigInt!
  totalAssets: BigInt!
  depositApy: BigDecimal!
  borrowApy: BigDecimal!
}

type VaultStrategyReported @entity(immutable: true) {
  " Vault address + strategy address + txHash "
  id: ID!
  vault: Vault!
  strategy: Strategy!
  gain: BigInt!
  loss: BigInt!
  timestamp: BigInt!
  txHash: Bytes!
  vaultPricePerShare: BigInt!
  strategyPricePerShare: BigInt!
  ptPriceInAsset: BigInt!
  assetPriceInBorrowToken: BigInt!

  " Price per share in the underlying asset "
  pricePerShareUnderlying: BigInt!
}
